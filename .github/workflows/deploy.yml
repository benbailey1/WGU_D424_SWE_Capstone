# Name of the workflow - appears in GitHub Actions tab
name: Build and Deploy to Azure Web App

# Triggers - this workflow runs on:
# - Push to main branch
# - Manual trigger (workflow_dispatch)
on:
  push:
    branches:
      - main
  workflow_dispatch:  # Allows manual triggering from GitHub Actions tab

# Environment variables used throughout the workflow
env:
  DOCKER_HUB_REPO: ${{ secrets.DOCKER_HUB_USERNAME }}/studenttermtracker
  AZURE_WEBAPP_NAME: studenttermtracker-container  # Replace with your app name

jobs:
  # Single job that builds and deploys the application
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    # Step 1: Check out the repository code
    - name: Checkout code
      uses: actions/checkout@v4
      
    # Step 2: Set up Docker Buildx for advanced Docker builds
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    # Step 3: Authenticate with Docker Hub using secrets
    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
    
    # Step 4: Generate version tag based on date and commit SHA
    - name: Generate version tag
      id: version
      run: |
        # Create a unique tag using timestamp and short commit SHA
        VERSION=$(date +%Y%m%d)-$(echo ${{ github.sha }} | cut -c1-7)
        echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
        echo "Generated version: $VERSION"
    
    # Step 5: Build and push Docker image to Docker Hub
    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: |
          ${{ env.DOCKER_HUB_REPO }}:latest
          ${{ env.DOCKER_HUB_REPO }}:${{ steps.version.outputs.VERSION }}
        cache-from: type=gha  # Use GitHub Actions cache
        cache-to: type=gha,mode=max
    
    # Step 6: Deploy the Docker image to Azure Web App
    - name: Deploy to Azure Web App
      uses: azure/webapps-deploy@v2
      with:
        app-name: ${{ env.AZURE_WEBAPP_NAME }}
        publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
        images: ${{ env.DOCKER_HUB_REPO }}:${{ steps.version.outputs.VERSION }}
    
    # Step 7: Display deployment information
    - name: Deployment Summary
      run: |
        echo "✅ Deployment completed successfully!"
        echo "📦 Docker Image: ${{ env.DOCKER_HUB_REPO }}:${{ steps.version.outputs.VERSION }}"
        echo "🌐 Application URL: https://${{ env.AZURE_WEBAPP_NAME }}.azurewebsites.net"
        echo "📊 Swagger URL: https://${{ env.AZURE_WEBAPP_NAME }}.azurewebsites.net/swagger"