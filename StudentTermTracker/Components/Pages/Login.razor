@page "/login"
@using StudentTermTracker.Services
@using StudentTermTracker.Models
@inject IAuthenticationService AuthService
@* @inject IUserDataService UserDataService *@
@inject NavigationManager NavigationManager


<PageTitle>Login</PageTitle>

<div class="login-container" style="padding: 20px; margin-top: 30px;">
    <h3 style="text-align: center; margin-bottom: 10px;">Enter your credentials to login</h3>

    <input @bind="userName" placeholder="Username" class="form-control" />

    <input @bind="password" placeholder="Password" type="password" class="form-control" style="margin-bottom: 30px; " />

    <button @onclick="HandleLogin_Clicked" class="btn btn-primary">Login</button>
    <button @onclick="Register" class="btn btn-secondary" style="margin-top: 10px;">Create Account</button>

</div>


@code {
    private string userName = string.Empty;
    private string password = string.Empty;

    private async Task HandleLogin_Clicked()
    {
        if (string.IsNullOrWhiteSpace(userName) || string.IsNullOrWhiteSpace(password))
        {
            await Shell.Current.DisplayAlert("Login Failed", "Invalid User Name or Password", "OK");
            return;
        }

        var isAuthenticated = await AuthService.Authenticate(userName, password);
        if (isAuthenticated)
        {
            NavigationManager.NavigateTo("/terms");
        }
        else 
        {
            await Shell.Current.DisplayAlert("Login Failed", "Invalid User Name or Password", "OK");
        }
    }

    private void Register()
    {
        NavigationManager.NavigateTo("/register");
    }

}
