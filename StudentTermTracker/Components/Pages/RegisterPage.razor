@page "/register"
@using StudentTermTracker.Services
@inject IAuthenticationService AuthenticationService
@inject NavigationManager NavigationManager

<PageTitle>Register</PageTitle>

<div class="register-container" style="padding: 20px; margin-top: 30px;">
    <h3 style="text-align: center; margin-bottom: 10px;">Create a new account</h3>

    <input @bind="fullName" placeholder="Full Name" class="form-control" />
    <input @bind="userName" placeholder="Username" class="form-control" />
    <input @bind="password" placeholder="Password" type="password" class="form-control" />
    <input @bind="confirmPassword" placeholder="Confirm Password" type="password" class="form-control" />

    <button @onclick="Register" class="btn btn-primary" style="margin-top: 20px;">Register</button>
    <button @onclick="BackToLogin" class="btn btn-secondary" style="margin-top: 10px;">Back to Login</button>
</div>

@code {
    private string fullName = string.Empty;
    private string userName = string.Empty;
    private string password = string.Empty;
    private string confirmPassword = string.Empty;

    private async Task Register()
    {
        if (string.IsNullOrWhiteSpace(fullName))
        {
            await Shell.Current.DisplayAlert("Invalid Full Name", "Enter Full Name", "OK");
            return;
        }

        if (string.IsNullOrWhiteSpace(userName))
        {
            await Shell.Current.DisplayAlert("Invalid Username", "Enter Username", "OK");
            return;
        }

        if (string.IsNullOrWhiteSpace(password))
        {
            await Shell.Current.DisplayAlert("Invalid Password", "Enter Password", "OK");
            return;
        }

        if (password != confirmPassword)
        {
            await Shell.Current.DisplayAlert("Password Mismatch", "Passwords do not match", "OK");
            return;
        }

        var success = await AuthenticationService.Register(fullName, userName, password);
        if (success)
        {
            NavigationManager.NavigateTo("/login");
        }
        else
        {
            await Shell.Current.DisplayAlert("Registration Failed", "Unable to create account", "OK");
        }
    }

    private void BackToLogin()
    {
        NavigationManager.NavigateTo("/login");
    }
}